@*membuka halaman default (index)*@
@page "/"

@*membuat style*@
<style>
    .container {
        width: 400px;
    }

    button {
        width: 100px;
        height: 100px;
        font-size: 50px;
    }
</style>

<PageTitle>WhereGames</PageTitle>

<div class="container">
    <div class="row">
        @for(var animalNumber = 0; animalNumber < shuffledAnimals.Count; animalNumber++)
        {
            string animal = shuffledAnimals[animalNumber];
            string animalDescription = $"Animal #{animalNumber}";

            <div class="col-3">
                <button @onclick="(() => ButtonClick(animal, animalDescription))"
                    type="button" class="btn btn-outline-dark">
                    <h1>@animal</h1>
                </button>
            </div>
        }
    </div>
</div>

@code {
    // mendeklarasi dan menambahkan data ke dalam List<String>
    List<String> animals = new List<string>()
    {
        "🐭","🐭",
        "🐵","🐵",
        "🐺","🐺",
        "🐶","🐶",
        "🐱","🐱",
        "🦁","🦁",
        "🐯","🐯",
        "🐸","🐸"
    };

    // mendeklarasikan List<String> untuk List acak
    List<string> shuffledAnimals = new List<string>();

    // memulai permainan
    private void SetUpGame()
    {
        // fungsi acak (random)
        Random random = new Random();

        // mengambil data dari animals secara acak ke dalam shuffledAnimal
        shuffledAnimals = animals
            .OrderBy(item => random.Next())
            .ToList();

        // reset value count
        count = 0; 
    }

    // fungsi untuk merender aplikasi
    protected override void OnInitialized()
    {
        SetUpGame();
    }

    // deklarasi
    string clickedAnimal = string.Empty;
    string clickedAnimalDescription = string.Empty;

    int count = 0;

    // fungsi button
    private void ButtonClick(string animal, string animalDescription)
    {
        // saat value kosong
        if(clickedAnimal == string.Empty)
        {
            clickedAnimal = animal;
            clickedAnimalDescription = animalDescription;
        }
        // membandingkan 2 buah value
        else if(clickedAnimal == animal && clickedAnimalDescription != animalDescription)
        {
            // mengubah value menjadi empty
            shuffledAnimals = shuffledAnimals
            .Select(item => item.Replace(animal, string.Empty))
            .ToList();

            clickedAnimal = string.Empty;

            // menghitung jumlah benar
            count++;
            if(count == 8)
            {
                // reset game
                SetUpGame();
            }

        }
        else
        {
            clickedAnimal = string.Empty;
        }
    }
}